{
	"info": {
		"name": "PAL-Tracker-Distributed",
		"_postman_id": "10069a30-55de-764b-9d2e-ed7892e58243",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Registration",
			"description": "",
			"item": [
				{
					"name": "Get Accounts By Owner Id copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"postman.setEnvironmentVariable(\"accountId\", jsonData[0].id);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/accounts?ownerId={{userId}}",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "ownerId",
									"value": "{{userId}}",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get User By ID",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/users/{{userId}}",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Accounts By Owner Id",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/accounts?ownerId={{userId}}",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "ownerId",
									"value": "{{userId}}",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Projects By Account Id",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/projects?accountId={{accountId}}",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Register New User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Pete\"}"
						},
						"url": {
							"raw": "{{registration-route}}/registration",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"registration"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add New Project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"{{projectName}}\", \"accountId\": {{accountId}}}"
						},
						"url": {
							"raw": "{{registration-route}}/projects",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"projects"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Bus Refresh",
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{route}}/bus/refresh",
							"host": [
								"{{route}}"
							],
							"path": [
								"bus",
								"refresh"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Refresh",
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{route}}/refresh",
							"host": [
								"{{route}}"
							],
							"path": [
								"refresh"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Mappings",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/mappings",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"mappings"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}//metrics",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"",
								"metrics"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Info",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/info",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"info"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Health",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/health",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"health"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Environment",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}//env",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"",
								"env"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator AutoConfig",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/admin/autoconfig",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"admin",
								"autoconfig"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Beans",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}//beans",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"",
								"beans"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Docs",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/docs",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"docs"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Allocations",
			"description": "",
			"item": [
				{
					"name": "Get Allocations By Project id",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{allocations-route}}/allocations?projectId={{projectId}}",
							"host": [
								"{{allocations-route}}"
							],
							"path": [
								"allocations"
							],
							"query": [
								{
									"key": "projectId",
									"value": "{{projectId}}",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add New Allocation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"projectId\": {{projectId}}, \"userId\": {{userId}}, \"firstDay\": \"2015-05-17\", \"lastDay\": \"2015-05-18\"}"
						},
						"url": {
							"raw": "{{allocations-route}}/allocations",
							"host": [
								"{{allocations-route}}"
							],
							"path": [
								"allocations"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Bus Refresh",
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{route}}/bus/refresh",
							"host": [
								"{{route}}"
							],
							"path": [
								"bus",
								"refresh"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Refresh",
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{route}}/refresh",
							"host": [
								"{{route}}"
							],
							"path": [
								"refresh"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Mappings",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{route}}/mappings",
							"host": [
								"{{route}}"
							],
							"path": [
								"mappings"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{allocations-route}}/metrics",
							"host": [
								"{{allocations-route}}"
							],
							"path": [
								"metrics"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Info",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{allocations-route}}/info",
							"host": [
								"{{allocations-route}}"
							],
							"path": [
								"info"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Health",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{allocations-route}}/health",
							"host": [
								"{{allocations-route}}"
							],
							"path": [
								"health"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Environment",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{allocations-route}}//env",
							"host": [
								"{{allocations-route}}"
							],
							"path": [
								"",
								"env"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator AutoConfig",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{allocations-route}}/admin/autoconfig",
							"host": [
								"{{allocations-route}}"
							],
							"path": [
								"admin",
								"autoconfig"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Beans",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{allocations-route}}//beans",
							"host": [
								"{{allocations-route}}"
							],
							"path": [
								"",
								"beans"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Docs",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{allocations-route}}/docs",
							"host": [
								"{{allocations-route}}"
							],
							"path": [
								"docs"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Backlog",
			"description": "",
			"item": [
				{
					"name": "Get Stories By Project Id",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{backlog-route}}/stories?projectId={{projectId}}",
							"host": [
								"{{backlog-route}}"
							],
							"path": [
								"stories"
							],
							"query": [
								{
									"key": "projectId",
									"value": "{{projectId}}",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add New Story",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"projectId\": {{projectId}}, \"name\": \"{{storyName}}\"}"
						},
						"url": {
							"raw": "{{backlog-route}}/stories",
							"host": [
								"{{backlog-route}}"
							],
							"path": [
								"stories"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Bus Refresh",
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{backlog-route}}/bus/refresh",
							"host": [
								"{{backlog-route}}"
							],
							"path": [
								"bus",
								"refresh"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Refresh",
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{backlog-route}}/refresh",
							"host": [
								"{{backlog-route}}"
							],
							"path": [
								"refresh"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Mappings",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{backlog-route}}/mappings",
							"host": [
								"{{backlog-route}}"
							],
							"path": [
								"mappings"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{backlog-route}}//metrics",
							"host": [
								"{{backlog-route}}"
							],
							"path": [
								"",
								"metrics"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Info",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{backlog-route}}/info",
							"host": [
								"{{backlog-route}}"
							],
							"path": [
								"info"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Health",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{backlog-route}}/health",
							"host": [
								"{{backlog-route}}"
							],
							"path": [
								"health"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Environment",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{backlog-route}}//env",
							"host": [
								"{{backlog-route}}"
							],
							"path": [
								"",
								"env"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator AutoConfig",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{backlog-route}}/admin/autoconfig",
							"host": [
								"{{backlog-route}}"
							],
							"path": [
								"admin",
								"autoconfig"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Beans",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{backlog-route}}//beans",
							"host": [
								"{{backlog-route}}"
							],
							"path": [
								"",
								"beans"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Docs",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{backlog-route}}/docs",
							"host": [
								"{{backlog-route}}"
							],
							"path": [
								"docs"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Timesheets",
			"description": "",
			"item": [
				{
					"name": "Get Time Entries By User Id",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{timesheet-route}}/time-entries?userId={{userId}}",
							"host": [
								"{{timesheet-route}}"
							],
							"path": [
								"time-entries"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add New Time Entry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"projectId\": {{projectId}}, \"userId\": {{userId}}, \"date\": \"2015-05-17\", \"hours\": 6}"
						},
						"url": {
							"raw": "{{timesheet-route}}/time-entries",
							"host": [
								"{{timesheet-route}}"
							],
							"path": [
								"time-entries"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Bus Refresh",
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{timesheet-route}}/bus/refresh",
							"host": [
								"{{timesheet-route}}"
							],
							"path": [
								"bus",
								"refresh"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Refresh",
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{timesheet-route}}/refresh",
							"host": [
								"{{timesheet-route}}"
							],
							"path": [
								"refresh"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Mappings",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{timesheet-route}}/mappings",
							"host": [
								"{{timesheet-route}}"
							],
							"path": [
								"mappings"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{timesheet-route}}//metrics",
							"host": [
								"{{timesheet-route}}"
							],
							"path": [
								"",
								"metrics"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Info",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{timesheet-route}}/info",
							"host": [
								"{{timesheet-route}}"
							],
							"path": [
								"info"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Health",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{timesheet-route}}/health",
							"host": [
								"{{timesheet-route}}"
							],
							"path": [
								"health"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Environment",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{timesheet-route}}/env",
							"host": [
								"{{timesheet-route}}"
							],
							"path": [
								"env"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator AutoConfig",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{timesheet-route}}/admin/autoconfig",
							"host": [
								"{{timesheet-route}}"
							],
							"path": [
								"admin",
								"autoconfig"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Beans",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{timesheet-route}}/beans",
							"host": [
								"{{timesheet-route}}"
							],
							"path": [
								"beans"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Actuator Docs",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{timesheet-route}}/docs",
							"host": [
								"{{timesheet-route}}"
							],
							"path": [
								"docs"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Flow",
			"description": "",
			"item": [
				{
					"name": "Register New User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"userId\", jsonData.id);",
									"",
									"tests[\"userId is valid\"] = jsonData.userId !== null;",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var userNameSuffix = postman.getEnvironmentVariable(\"userNameSuffix\");",
									"userNameSuffix++;",
									"var userName = postman.getEnvironmentVariable(\"userNamePrefix\") + userNameSuffix;",
									"postman.setEnvironmentVariable(\"userName\",userName)",
									"postman.setEnvironmentVariable(\"userNameSuffix\",userNameSuffix)",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"{{userName}}\"}"
						},
						"url": {
							"raw": "{{registration-route}}/registration",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"registration"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get User By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"userId is valid\"] = jsonData.userId !== null;",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic dXNlcjpwYXNzd29yZA=="
							}
						],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/users/{{userId}}",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Accounts By Owner Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"accountId\", jsonData[0].id);",
									"",
									"tests[\"accountId is valid\"] = jsonData.accountId !== null;",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic dXNlcjpwYXNzd29yZA=="
							}
						],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/accounts?ownerId={{userId}}",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "ownerId",
									"value": "{{userId}}",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add New Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"projectId\", jsonData.id);",
									"",
									"tests[\"projectId is valid\"] = jsonData.projectId !== null;",
									"tests[\"Status code is 201\"] = responseCode.code === 201;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var projectNameSuffix = postman.getEnvironmentVariable(\"projectNameSuffix\");",
									"projectNameSuffix++;",
									"var userName = postman.getEnvironmentVariable(\"projectNamePrefix\") + projectNameSuffix;",
									"postman.setEnvironmentVariable(\"projectName\",userName)",
									"postman.setEnvironmentVariable(\"projectNameSuffix\",projectNameSuffix)"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"{{projectName}}\", \"accountId\": {{accountId}} }"
						},
						"url": {
							"raw": "{{registration-route}}/projects",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"projects"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Projects By Account Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/projects?accountId={{accountId}}",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add New Allocation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"allocationId\", jsonData.id);",
									"",
									"tests[\"allocationId is valid\"] = jsonData.allocationId !== null;",
									"tests[\"Status code is 201\"] = responseCode.code === 201;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"projectId\": {{projectId}}, \"userId\": {{userId}}, \"firstDay\": \"2015-05-17\", \"lastDay\": \"2015-05-18\"}"
						},
						"url": {
							"raw": "{{allocations-route}}/allocations",
							"host": [
								"{{allocations-route}}"
							],
							"path": [
								"allocations"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Allocations By Project id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{allocations-route}}/allocations?projectId={{projectId}}",
							"host": [
								"{{allocations-route}}"
							],
							"path": [
								"allocations"
							],
							"query": [
								{
									"key": "projectId",
									"value": "{{projectId}}",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add New Story",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"storyId\", jsonData.id);",
									"",
									"tests[\"storyId is valid\"] = jsonData.storyId !== null;",
									"tests[\"Status code is 201\"] = responseCode.code === 201;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var storyNameSuffix = postman.getEnvironmentVariable(\"storyNameSuffix\");",
									"storyNameSuffix++;",
									"var storyName = postman.getEnvironmentVariable(\"storyNamePrefix\") + storyNameSuffix;",
									"postman.setEnvironmentVariable(\"storyName\",storyName)",
									"postman.setEnvironmentVariable(\"storyNameSuffix\",storyNameSuffix)"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"projectId\": {{projectId}}, \"name\": \"{{storyName}}\"}"
						},
						"url": {
							"raw": "{{backlog-route}}/stories",
							"host": [
								"{{backlog-route}}"
							],
							"path": [
								"stories"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Stories By Project Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{backlog-route}}/stories?projectId={{projectId}}",
							"host": [
								"{{backlog-route}}"
							],
							"path": [
								"stories"
							],
							"query": [
								{
									"key": "projectId",
									"value": "{{projectId}}",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add New Time Entry",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"timeEntryId\", jsonData.id);",
									"",
									"tests[\"timeEntryId is valid\"] = jsonData.timeEntryId !== null;",
									"tests[\"Status code is 201\"] = responseCode.code === 201;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"projectId\": {{projectId}}, \"userId\": {{userId}}, \"date\": \"2015-05-17\", \"hours\": 6}"
						},
						"url": {
							"raw": "{{timesheet-route}}/time-entries",
							"host": [
								"{{timesheet-route}}"
							],
							"path": [
								"time-entries"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Time Entries By User Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{timesheet-route}}/time-entries?userId={{userId}}",
							"host": [
								"{{timesheet-route}}"
							],
							"path": [
								"time-entries"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Local Circuit Breaker Flow",
			"description": "",
			"item": [
				{
					"name": "Preparation",
					"description": "Preparation Before Stopping Registration Server",
					"item": [
						{
							"name": "Register New User",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"userId\", jsonData.id);",
											"",
											"tests[\"userId is valid\"] = jsonData.userId !== null;",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var userNameSuffix = postman.getEnvironmentVariable(\"userNameSuffix\");",
											"userNameSuffix++;",
											"var userName = postman.getEnvironmentVariable(\"userNamePrefix\") + userNameSuffix;",
											"postman.setEnvironmentVariable(\"userName\",userName)",
											"postman.setEnvironmentVariable(\"userNameSuffix\",userNameSuffix)",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\": \"{{userName}}\"}"
								},
								"url": {
									"raw": "{{registration-route}}/registration",
									"host": [
										"{{registration-route}}"
									],
									"path": [
										"registration"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Accounts By Owner Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"accountId\", jsonData[0].id);",
											"",
											"tests[\"accountId is valid\"] = jsonData.accountId !== null;",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "user",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{registration-route}}/accounts?ownerId={{userId}}",
									"host": [
										"{{registration-route}}"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "ownerId",
											"value": "{{userId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Add New Project A",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"projectIdA\", jsonData.id);",
											"",
											"tests[\"projectIdA is valid\"] = jsonData.projectIdA !== null;",
											"tests[\"Status code is 201\"] = responseCode.code === 201;"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var projectNameSuffix = postman.getEnvironmentVariable(\"projectNameSuffix\");",
											"projectNameSuffix++;",
											"var userName = postman.getEnvironmentVariable(\"projectNamePrefix\") + projectNameSuffix;",
											"postman.setEnvironmentVariable(\"projectName\",userName)",
											"postman.setEnvironmentVariable(\"projectNameSuffix\",projectNameSuffix)"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\": \"{{projectName}}A\", \"accountId\": {{accountId}} }"
								},
								"url": {
									"raw": "{{registration-route}}/projects",
									"host": [
										"{{registration-route}}"
									],
									"path": [
										"projects"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Add New Project B",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"postman.setEnvironmentVariable(\"projectIdB\", jsonData.id);",
											"",
											"tests[\"projectIdB is valid\"] = jsonData.projectIdB !== null;",
											"tests[\"Status code is 201\"] = responseCode.code === 201;"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var projectNameSuffix = postman.getEnvironmentVariable(\"projectNameSuffix\");",
											"projectNameSuffix++;",
											"var userName = postman.getEnvironmentVariable(\"projectNamePrefix\") + projectNameSuffix;",
											"postman.setEnvironmentVariable(\"projectName\",userName)",
											"postman.setEnvironmentVariable(\"projectNameSuffix\",projectNameSuffix)"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\": \"{{projectName}}B\", \"accountId\": {{accountId}} }"
								},
								"url": {
									"raw": "{{registration-route}}/projects",
									"host": [
										"{{registration-route}}"
									],
									"path": [
										"projects"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Add New Allocation A",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"projectId\": {{projectIdA}}, \"userId\": {{userId}}, \"firstDay\": \"2015-05-17\", \"lastDay\": \"2015-05-18\"}"
								},
								"url": {
									"raw": "{{allocations-route}}/allocations",
									"host": [
										"{{allocations-route}}"
									],
									"path": [
										"allocations"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Stop Registration Server",
					"description": "",
					"item": [],
					"_postman_isSubFolder": true
				},
				{
					"name": "Demonstrate Failures",
					"description": "",
					"item": [
						{
							"name": "Add New Allocation A - Cached Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"projectId\": {{projectIdA}}, \"userId\": {{userId}}, \"firstDay\": \"2015-05-17\", \"lastDay\": \"2015-05-18\"}"
								},
								"url": {
									"raw": "{{allocations-route}}/allocations",
									"host": [
										"{{allocations-route}}"
									],
									"path": [
										"allocations"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Add New Allocation B - Fail",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 503\"] = responseCode.code === 503;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"projectId\": {{projectIdB}}, \"userId\": {{userId}}, \"firstDay\": \"2015-05-17\", \"lastDay\": \"2015-05-18\"}"
								},
								"url": {
									"raw": "{{allocations-route}}/allocations",
									"host": [
										"{{allocations-route}}"
									],
									"path": [
										"allocations"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Start Registration Server",
					"description": "",
					"item": [],
					"_postman_isSubFolder": true
				},
				{
					"name": "Create Allocation on Recovery",
					"description": "",
					"item": [
						{
							"name": "Add New Allocation B - Succeed",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"projectId\": {{projectIdB}}, \"userId\": {{userId}}, \"firstDay\": \"2015-05-17\", \"lastDay\": \"2015-05-18\"}"
								},
								"url": {
									"raw": "{{allocations-route}}/allocations",
									"host": [
										"{{allocations-route}}"
									],
									"path": [
										"allocations"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Local SSO Flow",
			"description": "",
			"item": [
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"postman.setEnvironmentVariable(\"token\", jsonData.access_token);",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basic-auth-user}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basic-auth-password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"description": "",
									"type": "text"
								},
								{
									"key": "response_type",
									"value": "token",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{oauth-route}}/oauth/token",
							"host": [
								"{{oauth-route}}"
							],
							"path": [
								"oauth",
								"token"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Registration Noop",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"type": "any"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"type": "any"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{registration-route}}",
							"host": [
								"{{registration-route}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Registration Server Actuator Env",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actuator",
									"type": "string"
								},
								{
									"key": "password",
									"value": "operations4red",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/env",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"env"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Zipkin Flow",
			"description": "",
			"item": [
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"postman.setEnvironmentVariable(\"token\", jsonData.access_token);",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basic-auth-user}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basic-auth-password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"description": "",
									"type": "text"
								},
								{
									"key": "response_type",
									"value": "token",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{oauth-route}}/oauth/token",
							"host": [
								"{{oauth-route}}"
							],
							"path": [
								"oauth",
								"token"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Register New User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"postman.setEnvironmentVariable(\"userId\", jsonData.id);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"type": "any"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"type": "any"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"{{userName}}\"}"
						},
						"url": {
							"raw": "{{registration-route}}/registration",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"registration"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Accounts By Owner Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"postman.setEnvironmentVariable(\"accountId\", jsonData[0].id);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"type": "any"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"type": "any"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/accounts?ownerId={{userId}}",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "ownerId",
									"value": "{{userId}}",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add New Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"postman.setEnvironmentVariable(\"projectId\", jsonData.id);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"type": "any"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"type": "any"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"{{projectName}}\", \"accountId\": {{accountId}} }"
						},
						"url": {
							"raw": "{{registration-route}}/projects",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"projects"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Projects By Account Id",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"type": "any"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"type": "any"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/projects?accountId={{accountId}}",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "accountId",
									"value": "{{accountId}}",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add New Allocation",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"type": "any"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"type": "any"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"projectId\": {{projectId}}, \"userId\": {{userId}}, \"firstDay\": \"2015-05-17\", \"lastDay\": \"2015-05-18\"}"
						},
						"url": {
							"raw": "{{allocations-route}}/allocations",
							"host": [
								"{{allocations-route}}"
							],
							"path": [
								"allocations"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add New Story",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"type": "any"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"type": "any"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"projectId\": {{projectId}}, \"name\": \"{{storyName}}\"}"
						},
						"url": {
							"raw": "{{backlog-route}}/stories",
							"host": [
								"{{backlog-route}}"
							],
							"path": [
								"stories"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Allocations By Project Id",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"type": "any"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"type": "any"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{allocations-route}}/allocations?projectId={{projectId}}",
							"host": [
								"{{allocations-route}}"
							],
							"path": [
								"allocations"
							],
							"query": [
								{
									"key": "projectId",
									"value": "{{projectId}}",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Registration Server Actuator Env",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actuator",
									"type": "string"
								},
								{
									"key": "password",
									"value": "operations4red",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/env",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								"env"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Ping",
			"description": "",
			"item": [
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"postman.setEnvironmentVariable(\"token\", jsonData.access_token);",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basic-auth-user}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basic-auth-password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"description": "",
									"type": "text"
								},
								{
									"key": "response_type",
									"value": "token",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{oauth-route}}/oauth/token",
							"host": [
								"{{oauth-route}}"
							],
							"path": [
								"oauth",
								"token"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Ping Registration Server",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"type": "any"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"type": "any"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{registration-route}}/",
							"host": [
								"{{registration-route}}"
							],
							"path": [
								""
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Ping Allocation Server",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"type": "any"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"type": "any"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{allocations-route}}/env",
							"host": [
								"{{allocations-route}}"
							],
							"path": [
								"env"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Ping Backlog Server",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"type": "any"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"type": "any"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{backlog-route}}/",
							"host": [
								"{{backlog-route}}"
							],
							"path": [
								""
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Ping Timesheet Server",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"type": "any"
								},
								{
									"key": "callBackUrl",
									"type": "any"
								},
								{
									"key": "authUrl",
									"type": "any"
								},
								{
									"key": "accessTokenUrl",
									"type": "any"
								},
								{
									"key": "clientId",
									"type": "any"
								},
								{
									"key": "clientSecret",
									"type": "any"
								},
								{
									"key": "clientAuth",
									"type": "any"
								},
								{
									"key": "grantType",
									"type": "any"
								},
								{
									"key": "scope",
									"type": "any"
								},
								{
									"key": "username",
									"type": "any"
								},
								{
									"key": "password",
									"type": "any"
								},
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "redirectUri",
									"type": "any"
								},
								{
									"key": "refreshToken",
									"type": "any"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{timesheet-route}}/",
							"host": [
								"{{timesheet-route}}"
							],
							"path": [
								""
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}